(function(l,c){typeof exports=="object"&&typeof module<"u"?module.exports=c(require("vue")):typeof define=="function"&&define.amd?define(["vue"],c):(l=typeof globalThis<"u"?globalThis:l||self,l["vue-form"]=c(l.Vue))})(this,function(l){"use strict";const c={__name:"FormGroup",props:{formClass:String},setup(e){return(r,a)=>(l.openBlock(),l.createElementBlock("div",{class:l.normalizeClass([e.formClass])},[l.renderSlot(r.$slots,"default")],2))}},C=["for"],u={__name:"Label",props:{textLabel:{type:String,default:""},forId:String,labelClass:String},setup(e){return(r,a)=>e.textLabel?(l.openBlock(),l.createElementBlock("label",{key:0,for:e.forId,class:l.normalizeClass(e.labelClass)},l.toDisplayString(e.textLabel),11,C)):l.createCommentVNode("",!0)}},h=["type","value","id","maxlength","placeholder","required","aria-required","aria-invalid"],g={__name:"TextField",props:{type:{type:String,default:"text"},modelValue:String,id:String,inputClass:String,error:{type:Boolean,default:!1},maxlength:{type:Number,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1}},setup(e,{emit:r}){const a=e,t=l.ref(a.modelValue),d=r,n=o=>{t.value=o.target.value,d("update:modelValue",t.value)};return l.watch(()=>a.modelValue,o=>{t.value=o}),(o,s)=>(l.openBlock(),l.createElementBlock("div",{class:l.normalizeClass([e.inputClass,{[`${e.inputClass}--error`]:e.error}])},[l.createElementVNode("input",{type:e.type,value:t.value,id:e.id,class:l.normalizeClass([`${e.inputClass}__item`]),onInput:n,maxlength:e.maxlength,placeholder:e.placeholder,required:e.required,"aria-required":e.required,"aria-invalid":e.error},null,42,h)],2))}},k=["id","accept","multiple","required","aria-required","aria-invalid"],x={__name:"UploadFile",props:{id:String,uploadClass:String,modelValue:{type:[File,FileList,String],default:String},multiple:{type:Boolean,default:!1},error:{type:Boolean,default:!1},required:{type:Boolean,default:!1},accept:{type:String,default:""}},setup(e,{emit:r}){const a=r,t=d=>{const n=d.target.files,s=d.target.multiple?n:n[0];a("update:modelValue",s)};return(d,n)=>(l.openBlock(),l.createElementBlock("div",{class:l.normalizeClass([e.uploadClass,{[`${e.uploadClass}--error`]:e.error}])},[l.createElementVNode("input",{type:"file",id:e.id,class:l.normalizeClass([`${e.uploadClass}__item`]),accept:e.accept,onChange:t,multiple:e.multiple,required:e.required,"aria-required":e.required,"aria-invalid":e.error},null,42,k)],2))}},y=["id","required","checked","value","aria-required","aria-invalid"],f={__name:"Checkbox",props:{id:String,checkboxClass:String,modelValue:Boolean,textLabel:{type:String,default:""},error:{type:Boolean,default:!1},required:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(e){return(r,a)=>(l.openBlock(),l.createElementBlock("div",{class:l.normalizeClass([e.checkboxClass,{[`${e.checkboxClass}--error`]:e.error}])},[l.createElementVNode("input",{id:e.id,type:"checkbox",class:l.normalizeClass([`${e.checkboxClass}__item`]),required:e.required,checked:e.modelValue,value:e.modelValue,onChange:a[0]||(a[0]=t=>r.$emit("update:modelValue",!e.modelValue)),"aria-required":e.required,"aria-invalid":e.error},null,42,y),l.createVNode(u,{forId:e.id,labelClass:`${e.checkboxClass}__title`,textLabel:e.textLabel},null,8,["forId","labelClass","textLabel"])],2))}},V={__name:"Error",props:{errorMessage:{type:String,default:null},errorClass:String},setup(e){return(r,a)=>e.errorMessage?(l.openBlock(),l.createElementBlock("p",{key:0,class:l.normalizeClass(e.errorClass)},l.toDisplayString(e.errorMessage),3)):l.createCommentVNode("",!0)}},q={__name:"Hint",props:{hintMessage:{type:String,default:null},hintClass:String},setup(e){return(r,a)=>e.hintMessage?(l.openBlock(),l.createElementBlock("p",{key:0,class:l.normalizeClass(e.hintClass)},l.toDisplayString(e.hintMessage),3)):l.createCommentVNode("",!0)}},B=["id","placeholder","rows","required","aria-required","aria-invalid"],b={__name:"TextArea",props:{modelValue:String,id:String,textAreaClass:String,rows:{type:String,default:"3"},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},error:{type:Boolean,default:!1}},setup(e,{emit:r}){const a=e,t=l.ref(a.modelValue),d=r,n=o=>{t.value=o.target.value,d("update:modelValue",t.value)};return(o,s)=>(l.openBlock(),l.createElementBlock("div",{class:l.normalizeClass([e.textAreaClass,{[`${e.textAreaClass}--error`]:e.error}])},[l.withDirectives(l.createElementVNode("textarea",{"onUpdate:modelValue":s[0]||(s[0]=i=>t.value=i),id:e.id,class:l.normalizeClass([`${e.textAreaClass}__item`]),placeholder:e.placeholder,rows:e.rows,onInput:n,required:e.required,"aria-required":e.required,"aria-invalid":e.error},null,42,B),[[l.vModelText,t.value]])],2))}},S=["id","required","aria-required","aria-invalid"],$=["value","disabled","selected"],E={__name:"Select",props:{id:String,selectClass:String,options:Array,modelValue:String,error:{type:Boolean,default:!1},required:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(e,{emit:r}){const a=e,t=l.ref(a.modelValue),d=r,n=o=>{t.value=o.target.value,d("update:modelValue",t.value)};return(o,s)=>(l.openBlock(),l.createElementBlock("div",{class:l.normalizeClass([e.selectClass,{[`${e.selectClass}--error`]:e.error}])},[l.withDirectives(l.createElementVNode("select",{id:e.id,required:e.required,class:l.normalizeClass([`${e.selectClass}__item`]),"onUpdate:modelValue":s[0]||(s[0]=i=>t.value=i),onInput:n,"aria-required":e.required,"aria-invalid":e.error},[(l.openBlock(!0),l.createElementBlock(l.Fragment,null,l.renderList(e.options,i=>(l.openBlock(),l.createElementBlock("option",{key:i.id,value:i.id,disabled:i.disabled,selected:i.selected},l.toDisplayString(i.label),9,$))),128))],42,S),[[l.vModelSelect,t.value]])],2))}},L={__name:"GroupCheckbox",props:{options:Array,modelValue:Array,checkboxClass:String,error:{type:Boolean,default:!1},required:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(e,{emit:r}){const a=e,t=l.reactive(a.options.map(n=>{var o;return{...n,checked:l.ref((o=a.modelValue)==null?void 0:o.includes(n.id))||!1}})),d=r;return l.watch(t,()=>{d("update:modelValue",t.filter(n=>n.checked).map(n=>n.id))}),(n,o)=>(l.openBlock(!0),l.createElementBlock(l.Fragment,null,l.renderList(e.options,(s,i)=>(l.openBlock(),l.createBlock(f,{key:i,modelValue:t[i].checked,"onUpdate:modelValue":m=>t[i].checked=m,id:s.id,checkboxClass:e.checkboxClass,error:e.error,required:e.required,textLabel:s.label},null,8,["modelValue","onUpdate:modelValue","id","checkboxClass","error","required","textLabel"]))),128))}},z=["id","required","checked","onChange","aria-required","aria-invalid"],F={__name:"GroupRadio",props:{options:Array,modelValue:String,radioClass:String,error:{type:Boolean,default:!1},required:{type:Boolean,default:!1}},setup(e,{emit:r}){const a=e,t=l.ref(a.modelValue),d=r,n=o=>{t.value=o,d("update:modelValue",t.value)};return(o,s)=>(l.openBlock(!0),l.createElementBlock(l.Fragment,null,l.renderList(e.options,(i,m)=>(l.openBlock(),l.createElementBlock("div",{key:m,class:l.normalizeClass([e.radioClass,{[`${e.radioClass}--error`]:e.error}])},[l.createElementVNode("input",{id:i.id,type:"radio",class:l.normalizeClass([`${e.radioClass}__item`]),required:e.required,checked:i.id===t.value,onChange:A=>n(i.id),"aria-required":e.required,"aria-invalid":e.error},null,42,z),l.createVNode(u,{forId:i.id,labelClass:`${e.radioClass}__title`,textLabel:i.label},null,8,["forId","labelClass","textLabel"])],2))),128))}};return{install:(e,r)=>{e.component("FormGroup",c),e.component("Label",u),e.component("TextField",g),e.component("UploadFile",x),e.component("Checkbox",f),e.component("Error",V),e.component("Hint",q),e.component("TextArea",b),e.component("Select",E),e.component("GroupCheckbox",L),e.component("GroupRadio",F)}}});
